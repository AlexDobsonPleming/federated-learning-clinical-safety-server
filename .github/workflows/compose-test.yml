# .github/workflows/compose-test.yml
name: Docker-Compose Smoke Test

on:
  push: {}
  pull_request: {}

jobs:
  compose-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out your repository
      - name: Checkout code
        uses: actions/checkout@v4                       # checks out the repo for workflow access :contentReference[oaicite:0]{index=0}

      # 2. Install Docker Compose (CLI v1)
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose         # installs compose for `docker compose` commands :contentReference[oaicite:1]{index=1}

      # 3. Build & start all services defined in docker-compose.test.yml
      - name: Build & start services
        run: |
          docker compose -f docker-compose.test.yml up --build -d  # build & detach :contentReference[oaicite:2]{index=2}

      # 4. List running containers to verify they’re up
      - name: Verify containers are running
        run: docker compose -f docker-compose.test.yml ps        # shows container status :contentReference[oaicite:3]{index=3}

      # 5. Wait for the API to respond (up to ~60s)
      - name: Wait for API to become ready
        run: |
          for i in {1..30}; do
            if curl -sf http://localhost:8000/api/models/; then     # polls health of your endpoint :contentReference[oaicite:4]{index=4}
              echo "✅ API is up!"
              exit 0
            fi
            echo "⏳ Waiting for API..."
            sleep 2
          done
          echo "❌ API did not become ready in time"
          docker compose -f docker-compose.test.yml logs api       # dump logs for debugging
          exit 1

      # 6. Tear down the stack when done/failure
      - name: Tear down
        if: always()
        run: docker compose -f docker-compose.test.yml down --volumes --remove-orphans  # clean up :contentReference[oaicite:5]{index=5}
